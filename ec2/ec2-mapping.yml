AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 CloudFormation Template

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Parameters:
          - EC2Name
          - Environment
          - AMIId
          - KeyName
          - VPC
          - Subnet
          - AllocateEIP

    ParameterLabels:
      EC2Name:
        default: EC2 Instance Name
      Environment:
        default: Environment
      AMIId:
        default: AMI Id
      KeyName:
        default: EC2 Key Pair Name
      AllocateEIP:
        default: Elastic IP


# Custom Variable for the environment
Parameters:
  EC2Name:
    Description: Name tag for EC2
    Type: String

  # Keypair should be manually created prior to create cloudformation stack(EC2 -> KeyPair)
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair

  Environment:
    Description: Specify Environment
    Type: String
    AllowedValues:
      - test
      - stag
      - prod

  VPC:
    Description: Specify VPC Id
    Type: AWS::EC2::VPC::Id

  Subnet:
    Description: Specify Subnet Id
    Type: AWS::EC2::Subnet::Id

  AMIId:
    Description: Specify AMI Id
    Type: AWS::EC2::Image::Id

  AllocateEIP:
    Description: Select "yes" if you want to assign EIP to an instance
    Type: String
    AllowedValues:
      - yes
      - no

Mappings: 
  Specs:
    InstanceType: 
      test: t2.micro
      stag: t2.medium
      prod: m5.large

Conditions:
  UseAllocateEIP: !Equals [!Ref AllocateEIP, yes]

Resources:

  # IAM roles assigned to EC2 instnaces
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM

  # IAM Instance profile assigned to EC2 instnaces
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref IAMRole
    DependsOn: IAMRole

  # Security Group assigned to EC2 instnaces
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ['-', [!Ref EC2Name, "sg"]]
      GroupDescription: !Join [' ', [!Ref EC2Name, "Instance", "Security Group"]]
      VpcId: !Ref VPC
      Tags:
        -
          Key: Name
          Value: !Join ['-', [!Ref EC2Name, "InstanceSecurityGroup"]]
  
  # Security Group Ingress Rule
  HTTPIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref InstanceSecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0
    DependsOn:
      - InstanceSecurityGroup

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        DisableApiTermination: false
        InstanceInitiatedShutdownBehavior: stop
        IamInstanceProfile:
          Name: !Ref InstanceProfile
        ImageId: !Ref AMIId
        InstanceType: !FindInMap [Specs, InstanceType, !Ref Environment]
        Monitoring:
          Enabled: false
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !Ref InstanceSecurityGroup
        TagSpecifications:
          -
            ResourceType: instance
            Tags:
              -
                Key: Name
                Value: !Ref EC2Name
        UserData:
          Fn::Base64:
            !Sub |
                #!/bin/bash -xe
                sudo yum install -y httpd
                echo "<html>Hello-World!!</html>" > /tmp/index.html
                sudo cp /tmp/index.html /var/www/html/index.html
                sudo chmod 755 /var/www/html/index.html
                sudo service httpd start
                sudo chkconfig httpd on
      LaunchTemplateName: !Ref EC2Name
    DependsOn:
      - InstanceSecurityGroup
      - InstanceProfile

  Instance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate: 
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      SubnetId: !Ref Subnet
    DependsOn:
      - LaunchTemplate
  
  ## Assign Elastic IP
  EIP:
    Type: AWS::EC2::EIP
    Condition: UseAllocateEIP

  ## Associate Elastic IP
  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Condition: UseAllocateEIP
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      InstanceId: !Ref Instance
    DependsOn:
      - EIP
      - Instance
